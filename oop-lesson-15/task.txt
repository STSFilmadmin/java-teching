1. Створити клас Hero, що являє собою героя і містить поле
name.
    Додати конструктор, що приймає ім'я героя і геттер для імені
(сеттер не потрібен).
    Додати метод attackEnemy(), що виводить у консоль повідомлення про те,
що герой атакує ворога.
    Створити клас TrainingGround, що містить метод main. Протестувати
створення героя та його атаку.  
2. Створити класи Warrior, Mage і Archer, що являють собою
спадкоємцями класу Hero
    Перевизначити в них метод attackEnemy() для виведення
спеціалізованого для цього класу повідомлення про атаку.
    Протестувати створення героїв різних класів та їхні атаки в класі
TrainingGround.
3. Створити клас Enemy, що являє собою ворога і містить поле
health (кількість здоров'я).
    Додати конструктор, що приймає кількість здоров'я, а також сеттер
і геттер.
    Додати метод takeDamage(int damage), який зменшує кількість
здоров'я відповідно до отриманої шкоди.
    Переписати метод attackEnemy класу Hero, додавши йому параметр типу
Enemy.
    Метод має викликати у ворога метод takeDamage і передавати в нього
певну кількість шкоди.
    Перевизначити метод у підкласах Warrior, Mage і Archer так, щоб
кожен герой наносив ворогові різну кількість шкоди.
    
4. Зробити клас Hero і його метод attackEnemy абстрактними.
5. Створити інтерфейс Mortal, що містить метод isAlive().
    Зробити так, щоб клас Enemy реалізовував інтерфейс Mortal. 
    Визначити метод isAlive у класі Enemy так, щоб той повертав true,
якщо кількість здоров'я ворога більша за 0.
    
6. Створити клас BattleGround із методом main, у якому створити симуляцію
героя, який атакує ворога.
7*. Додати герою показник здоров'я і можливість загинути.
     Додати можливість ворогові атакувати героя у відповідь.
     Створити кілька видів ворогів (спадкоємців класу Enemy) з різними
здібностями (наприклад, Zombie - має шанс воскреснути при загибелі)
     Дати героям унікальні здібності.
     Продемонструвати бій героя з кількома суперниками.